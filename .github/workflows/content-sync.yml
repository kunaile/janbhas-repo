name: Smart Content Sync

on:
  push:
    branches: [main]
    paths: ['content/**']

permissions:
  contents: read
  actions: read

concurrency:
  group: content-sync-${{ github.ref }}
  cancel-in-progress: true

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}
  NODE_ENV: production

jobs:
  sync-changed-content:
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, 'publish')
    timeout-minutes: 10
    
    steps:
      - name: üîê Verify authorization
        run: |
          AUTHORIZED_USERS="${{ secrets.AUTHORIZED_SYNC_USERS }}"
          CURRENT_USER="${{ github.event.head_commit.author.username }}"
          
          if [[ -z "$AUTHORIZED_USERS" ]]; then
            echo "‚ùå Authorization configuration missing"
            exit 1
          fi
          
          if [[ "$AUTHORIZED_USERS" != *"$CURRENT_USER"* ]]; then
            echo "‚ùå Unauthorized sync attempt"
            exit 1
          fi
          
          echo "‚úÖ Authorization verified"

      - name: üì• Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 2

      - name: üîç Detect changes
        id: changes
        run: |
          CHANGED_FILES=$(git diff --name-only --diff-filter=AM HEAD~1 HEAD | grep -E '^content/.*\.(md|mdx)$' || true)
          REMOVED_FILES=$(git diff --name-only --diff-filter=D HEAD~1 HEAD | grep -E '^content/.*\.(md|mdx)$' || true)
          
          TOTAL_CHANGES=$(printf '%s\n%s' "$CHANGED_FILES" "$REMOVED_FILES" | grep -v '^$' | wc -l)
          echo "total-changes=$TOTAL_CHANGES" >> $GITHUB_OUTPUT
          
          if [ "$TOTAL_CHANGES" -gt 0 ]; then
            echo "üìù Detected $TOTAL_CHANGES file changes"
            {
              echo "CHANGED_FILES<<EOF"
              echo "$CHANGED_FILES"
              echo "EOF"
              echo "REMOVED_FILES<<EOF" 
              echo "$REMOVED_FILES"
              echo "EOF"
            } >> $GITHUB_ENV
          else
            echo "‚ÑπÔ∏è No content changes detected"
          fi

      - name: ‚úÖ Validate environment
        if: steps.changes.outputs.total-changes != '0'
        run: |
          # Check secrets without exposing values
          SECRETS_VALID=true
          
          if [ -z "${{ secrets.DATABASE_URL }}" ]; then
            echo "‚ùå Database configuration missing"
            SECRETS_VALID=false
          fi
          
          if [ -z "${{ secrets.GOOGLE_GEMINI_API_KEY }}" ]; then
            echo "‚ùå API key configuration missing"
            SECRETS_VALID=false
          fi
          
          if [ "$SECRETS_VALID" = "false" ]; then
            exit 1
          fi
          
          echo "‚úÖ Environment validated"

      - name: ‚öôÔ∏è Setup Node.js
        if: steps.changes.outputs.total-changes != '0'
        uses: actions/setup-node@v4.0.1
        with:
          node-version: '20'

      - name: üì¶ Setup pnpm
        if: steps.changes.outputs.total-changes != '0'
        uses: pnpm/action-setup@v4.0.0
        with:
          version: 8

      - name: üóÇÔ∏è Cache dependencies
        if: steps.changes.outputs.total-changes != '0'
        uses: actions/cache@v4.0.0
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: üìã Install dependencies
        if: steps.changes.outputs.total-changes != '0'
        run: pnpm install --frozen-lockfile --silent

      - name: üöÄ Sync content
        if: steps.changes.outputs.total-changes != '0'
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          retry_on: error
          command: |
            echo "üîÑ Processing ${{ steps.changes.outputs.total-changes }} files"
            pnpm sync:github

      - name: üìä Report results
        if: always() && steps.changes.outputs.total-changes != '0'
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "## ‚úÖ Content Sync Completed" >> $GITHUB_STEP_SUMMARY
            echo "- Files processed: ${{ steps.changes.outputs.total-changes }}" >> $GITHUB_STEP_SUMMARY
            echo "- Status: Success" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ‚ùå Content Sync Failed" >> $GITHUB_STEP_SUMMARY
            echo "- Files: ${{ steps.changes.outputs.total-changes }}" >> $GITHUB_STEP_SUMMARY
            echo "- Status: Failed" >> $GITHUB_STEP_SUMMARY
          fi
