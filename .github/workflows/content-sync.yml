name: Smart Content Sync

on:
  push:
    branches: [main]
    paths: ['content/**']

permissions:
  contents: read
  actions: read

concurrency:
  group: content-sync-${{ github.ref }}
  cancel-in-progress: true

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}
  NODE_ENV: production

jobs:
  sync-changed-content:
    runs-on: ubuntu-latest
    # FIXED: More flexible commit message matching
    if: contains(github.event.head_commit.message, 'publish')
    timeout-minutes: 10

    steps:
      - name: 🔐 Verify authorization
        run: |
          AUTHORIZED_USERS="${{ secrets.AUTHORIZED_SYNC_USERS }}"
          CURRENT_USER="${{ github.event.head_commit.author.username }}"
          
          if [[ -z "$AUTHORIZED_USERS" ]]; then
            echo "❌ Authorization configuration missing"
            exit 1
          fi
          
          if [[ "$AUTHORIZED_USERS" != *"$CURRENT_USER"* ]]; then
            echo "❌ Unauthorized sync attempt by: $CURRENT_USER"
            echo "ℹ️  Authorized users: $AUTHORIZED_USERS"
            exit 1
          fi
          
          echo "✅ Authorization verified for: $CURRENT_USER"

      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: 🔍 Detect changes with enhanced rename detection
        id: changes
        run: |
          echo "🔍 Analyzing commit: ${{ github.event.head_commit.message }}"
          
          # FIXED: Enhanced file change detection with rename support
          CHANGED_FILES=$(git diff -M --name-only --diff-filter=AMR HEAD~1 HEAD | grep -E '^content/.*\.(md|mdx)$' || true)
          REMOVED_FILES=$(git diff -M --name-only --diff-filter=D HEAD~1 HEAD | grep -E '^content/.*\.(md|mdx)$' || true)
          
          # Also detect renames specifically
          RENAMED_FILES=$(git diff -M --name-status HEAD~1 HEAD | grep '^R' | cut -f3 | grep -E '^content/.*\.(md|mdx)$' || true)
          
          # Combine all changes
          ALL_CHANGES=$(printf '%s\n%s\n%s' "$CHANGED_FILES" "$REMOVED_FILES" "$RENAMED_FILES" | grep -v '^$' | sort -u)
          TOTAL_CHANGES=$(echo "$ALL_CHANGES" | grep -v '^$' | wc -l)
          
          echo "total-changes=$TOTAL_CHANGES" >> $GITHUB_OUTPUT
          
          if [ "$TOTAL_CHANGES" -gt 0 ]; then
            echo "📝 Detected $TOTAL_CHANGES file changes"
            echo "📄 Changed files:"
            echo "$ALL_CHANGES" | while read -r file; do
              echo "  - $file"
            done
            
            # Set environment variables for the sync script
            {
              echo "CHANGED_FILES<<EOF"
              echo "$CHANGED_FILES"
              echo "EOF"
              echo "REMOVED_FILES<<EOF"
              echo "$REMOVED_FILES"
              echo "EOF"
              echo "RENAMED_FILES<<EOF"
              echo "$RENAMED_FILES"
              echo "EOF"
            } >> $GITHUB_ENV
          else
            echo "ℹ️ No content changes detected"
          fi

      - name: ✅ Validate environment
        if: steps.changes.outputs.total-changes != '0'
        run: |
          SECRETS_VALID=true
          
          if [ -z "${{ secrets.DATABASE_URL }}" ]; then
            echo "❌ Database configuration missing"
            SECRETS_VALID=false
          fi
          
          if [ -z "${{ secrets.GOOGLE_GEMINI_API_KEY }}" ]; then
            echo "❌ API key configuration missing" 
            SECRETS_VALID=false
          fi
          
          if [ "$SECRETS_VALID" = "false" ]; then
            exit 1
          fi
          
          echo "✅ Environment validated"

      - name: ⚙️ Setup Node.js
        if: steps.changes.outputs.total-changes != '0'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Setup pnpm
        if: steps.changes.outputs.total-changes != '0'
        uses: pnpm/action-setup@v4
        with:
          version: 10.5.2

      - name: 🗂️ Cache dependencies
        if: steps.changes.outputs.total-changes != '0'
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: 📋 Install dependencies
        if: steps.changes.outputs.total-changes != '0'
        run: pnpm install --frozen-lockfile --silent

      - name: 🚀 Sync content
        if: steps.changes.outputs.total-changes != '0'
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          retry_on: error
          command: |
            echo "🔄 Processing ${{ steps.changes.outputs.total-changes }} files"
            echo "📊 Commit info:"
            echo "  Author: ${{ github.event.head_commit.author.name }}"
            echo "  Message: ${{ github.event.head_commit.message }}"
            echo "  Timestamp: ${{ github.event.head_commit.timestamp }}"
            pnpm sync:github

      - name: 📊 Report results
        if: always() && steps.changes.outputs.total-changes != '0'
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "## ✅ Content Sync Completed" >> $GITHUB_STEP_SUMMARY
            echo "- **Commit:** ${{ github.event.head_commit.message }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Author:** ${{ github.event.head_commit.author.name }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Files processed:** ${{ steps.changes.outputs.total-changes }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Status:** ✅ Success" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ❌ Content Sync Failed" >> $GITHUB_STEP_SUMMARY
            echo "- **Commit:** ${{ github.event.head_commit.message }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Files:** ${{ steps.changes.outputs.total-changes }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Status:** ❌ Failed" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 🐛 Debug information
        if: failure()
        run: |
          echo "## 🐛 Debug Information"
          echo "- Commit message: '${{ github.event.head_commit.message }}'"
          echo "- Contains 'publish': ${{ contains(github.event.head_commit.message, 'publish') }}"
          echo "- Author: ${{ github.event.head_commit.author.name }}"
          echo "- Changed files count: ${{ steps.changes.outputs.total-changes }}"
          echo "- Environment variables set:"
          env | grep -E '^(CHANGED_FILES|REMOVED_FILES|RENAMED_FILES)=' || echo "  No change environment variables found"
